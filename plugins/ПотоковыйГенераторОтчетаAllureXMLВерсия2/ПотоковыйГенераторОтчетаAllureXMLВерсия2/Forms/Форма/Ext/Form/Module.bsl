&НаКлиенте
Перем КонтекстЯдра;

// { Plugin interface

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
КонецПроцедуры

&НаКлиенте
Функция ОписаниеПлагина(ВозможныеТипыПлагинов) Экспорт
	Возврат ОписаниеПлагинаНаСервере(ВозможныеТипыПлагинов);
КонецФункции

&НаСервере
Функция ОписаниеПлагинаНаСервере(ВозможныеТипыПлагинов)
	Возврат ЭтотОбъектНаСервере().ОписаниеПлагина(ВозможныеТипыПлагинов);
КонецФункции
// } Plugin interface

// { Report generator interface

// TODO: добавить недостающие методы API

&НаКлиенте
Процедура ОбработатьПолученияРезультатаТеста(Знач КонтекстЯдра, Знач РезультатТеста) Экспорт
	
	// TODO: перенести в подходящий метод API
	Объект.СостоянияТестов = КонтекстЯдра.Объект.СостоянияТестов;
	Объект.КаталогВывода = "%TEMP%\dummy.json";
		
	ОбработатьПолученияРезультатаТестаНаСервере(РезультатТеста);
	
КонецПроцедуры

// } Report generator interface

// { Helpers

&НаСервере
Процедура ОбработатьПолученияРезультатаТестаНаСервере(Знач РезультатТеста)
	ЭтотОбъектНаСервере().ОбработатьПолученияРезультатаТестаНаСервере(РезультатТеста);	
КонецПроцедуры

&НаКлиенте
// задаю уникальное имя для возможности получения одного отчета allure по разным тестовым наборам
Функция ПолучитьУникальноеИмяФайла(Знач ИмяФайла)
	Файл = Новый Файл(ИмяФайла);
	ГУИД = Новый УникальныйИдентификатор;
	ИмяФайла = СтрЗаменить("%1-result.json", "%1", ГУИД);
	//ИмяФайла = СтрЗаменить(ИмяФайла, "%2", Файл.ИмяБезРасширения);
	ИмяФайла = Файл.Путь + "/"+ ИмяФайла; 
	Возврат ИмяФайла;
КонецФункции

&НаСервере
Процедура ПроверитьИмяФайлаРезультатаAllureСервер(ИмяФайла) Экспорт
	
	Сообщение = "Уникальное имя файла " + ИмяФайла;
	ЗаписьЖурналаРегистрации("xUnitFor1C.ГенераторОтчетаAllureXMLВерсия2", УровеньЖурналаРегистрации.Информация, , , Сообщение);
	
	ЭтотОбъектНаСервере().ПроверитьИмяФайлаРезультатаAllure(ИмяФайла);
КонецПроцедуры

&НаСервере
Функция ЭтотОбъектНаСервере()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции
// } Helpers

