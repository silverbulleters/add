&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем СтроковыеУтилиты;


// { Plugin interface

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	СтроковыеУтилиты    = КонтекстЯдра.Плагин("СтроковыеУтилиты");
	
	// Инициализация параметров
	
КонецПроцедуры

&НаКлиенте
Функция ОписаниеПлагина(ВозможныеТипыПлагинов) Экспорт
	Возврат ОписаниеПлагинаНаСервере(ВозможныеТипыПлагинов);
КонецФункции

&НаСервере
Функция ОписаниеПлагинаНаСервере(ВозможныеТипыПлагинов)
	Возврат ЭтотОбъектНаСервере().ОписаниеПлагина(ВозможныеТипыПлагинов);
КонецФункции

// } Plugin interface

&НаКлиенте
// Считывает переменные окружения в соответствие
//
// Параметры:
//
// Возвращаемое значение:
//   Соответствие   - все переменные окружения
//
Функция ВсеПеременныеОкружения() Экспорт

	ПеременныеОкружения = Новый Соответствие;
	
	ФайлСПеременными = СчитатьПеременныеОкруженияВФайл();
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ФайлСПеременными);
	Стр = Текст.ПрочитатьСтроку();

	Пока Стр <> Неопределено Цикл
		
		СоставСтроки = СтроковыеУтилиты.РазложитьСтрокуВМассивПодстрок(Стр, "=");
		
		ИмяНайденнойПеременной      = СоставСтроки[0];
		ЗначениеПеременнойОкружения = СоставСтроки[1];

		ПеременныеОкружения.Вставить(ИмяНайденнойПеременной
										, ЗначениеПеременнойОкружения);
										
		Стр = Текст.ПрочитатьСтроку();
		
	КонецЦикла;

	Текст.Закрыть();
	УдалитьФайлы(ФайлСПеременными);	
	
	Возврат ПеременныеОкружения;

КонецФункции // ПолучитьПеременныеОкружения()

&НаКлиенте
// Считывает переменные окружения в соответствие
//
// Параметры:
//	ИмяПеременной		- Строка - имя переменной, значение которой надо получить
//	ЗначениеПоУмолчанию - Строка - значение, которое вернуть если переменная не определена
//
// Возвращаемое значение:
//   Соответствие   - все переменные окружения
//
Функция ЗначениеПеременнойОкружения(ИмяПеременной
												, ЗначениеПоУмолчанию = Неопределено) Экспорт

	Результат = ВсеПеременныеОкружения()[ИмяПеременной];
	Если Результат = Неопределено Тогда
		
		Результат = ЗначениеПоУмолчанию;
		
	КонецЕсли;
	
	Возврат Результат;

КонецФункции // ПолучитьЗначениеПеременнойОкружения()



&НаКлиенте
Функция СчитатьПеременныеОкруженияВФайл()
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	
	Если КонтекстЯдра.ЭтоLinux Тогда
		
		ТекстКоманды = "sh -c 'env = > " + ИмяВременногоФайла + "'";
		
	Иначе
		
		ТекстКоманды = "SET > """ + ИмяВременногоФайла + """";
		
	КонецЕсли;
	
	КомандаСистемы(ТекстКоманды);

	Возврат ИмяВременногоФайла;
		
КонецФункции

// { Helpers
&НаСервере
Функция ЭтотОбъектНаСервере()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции

&НаКлиенте
Процедура Отладка(ТекстСообщения)
	
	КонтекстЯдра.Отладка(ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура Лог(ТекстСообщения, Важное = Ложь)
	
	Если Важное Тогда
		
		КонтекстЯдра.ВывестиСообщение(ТекстСообщения, СтатусСообщения.Важное);
		
	Иначе
		
		КонтекстЯдра.ВывестиСообщение(ТекстСообщения);
		
	КонецЕсли;		
	
КонецПроцедуры
// } Helpers
