#Область ОписаниеПеременных

&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем Утверждения;
&НаКлиенте
Перем СтроковыеУтилиты;
&НаКлиенте
Перем КаталогиВнешнихОбработок;
&НаКлиенте
Перем КаталогиВнешнихОтчетов;
&НаКлиенте
Перем ИсключенияИзПроверок;

#КонецОбласти

#Область ИнтерфейсТестирования

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	СтроковыеУтилиты = КонтекстЯдра.Плагин("СтроковыеУтилиты");
	
	ПутьНастройки = "Тесты";
	Настройки(КонтекстЯдра, ПутьНастройки);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдра) Экспорт
	
	Инициализация(КонтекстЯдра);
	
	Если Не ВыполнятьТест(КонтекстЯдра) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого КаталогВнешнихОтчетов Из КаталогиВнешнихОтчетов Цикл
		Макеты = МакетыВнешнегоОбъекта("ВнешниеОтчеты", КаталогВнешнихОтчетов, "*.erf");
		Если Макеты.Количество() Тогда
			ИмяГруппы = СтроковыеУтилиты.ПодставитьПараметрыВСтроку("Внешние отчеты [%1]", КаталогВнешнихОтчетов);
			НаборТестов.НачатьГруппу(ИмяГруппы, Истина);
			Для Каждого Макет Из Макеты Цикл 
				ИмяПроцедуры = "ТестДолжен_ПроверитьМакетСКДВнешнегоОтчета";
				НаборТестов.Добавить(
				ИмяПроцедуры, 
				НаборТестов.ПараметрыТеста(Макет.ИмяФайла, Макет.ПолноеИмя, Макет.ИмяМакета), 
				СтроковыеУтилиты.ПодставитьПараметрыВСтроку("%1 [%2]", Макет.ИмяФайла, Макет.ИмяМакета));	
			КонецЦикла;			
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого КаталогВнешнихОбработок Из КаталогиВнешнихОбработок Цикл
		Макеты = МакетыВнешнегоОбъекта("ВнешниеОбработки", КаталогВнешнихОбработок, "*.epf");
		Если Макеты.Количество() Тогда
			ИмяГруппы = СтроковыеУтилиты.ПодставитьПараметрыВСтроку("Внешние Обработки [%1]", КаталогВнешнихОтчетов);
			НаборТестов.НачатьГруппу(ИмяГруппы, Истина);
			Для Каждого Макет Из Макеты Цикл 
				ИмяПроцедуры = "ТестДолжен_ПроверитьМакетСКДВнешнейОбработки";
				НаборТестов.Добавить(
				ИмяПроцедуры, 
				НаборТестов.ПараметрыТеста(Макет.ИмяФайла, Макет.ПолноеИмя, Макет.ИмяМакета), 
				СтроковыеУтилиты.ПодставитьПараметрыВСтроку("%1 [%2]", Макет.ИмяФайла, Макет.ИмяМакета));	
			КонецЦикла;			
		КонецЕсли;
	КонецЦикла;
			
КонецПроцедуры

#КонецОбласти

#Область РаботаСНастройками

&НаКлиенте
Процедура Настройки(КонтекстЯдра, Знач ПутьНастройки)

	Если ЗначениеЗаполнено(Объект.Настройки) Тогда
		Возврат;
	КонецЕсли;
	
	КаталогиВнешнихОбработок = Новый Массив;
	КаталогиВнешнихОтчетов = Новый Массив;
	ИсключенияИзПроверок = Новый Соответствие;
	ПлагинНастроек = КонтекстЯдра.Плагин("Настройки");
	Объект.Настройки = ПлагинНастроек.ПолучитьНастройку(ПутьНастройки);
	Настройки = Объект.Настройки;
	
	Если Не ЗначениеЗаполнено(Объект.Настройки) Тогда
		Объект.Настройки = Новый Структура(ПутьНастройки, Неопределено);
		Возврат;
	КонецЕсли;
		
	Если Настройки.Свойство(ИмяТеста()) И Настройки[ИмяТеста()].Свойство("КаталогиВнешнихОтчетов") Тогда
		КаталогиВнешнихОтчетов = ОбработатьОтносительныеПути(Настройки[ИмяТеста()].КаталогиВнешнихОтчетов);	
	КонецЕсли;
	
	Если Настройки.Свойство(ИмяТеста()) И Настройки[ИмяТеста()].Свойство("КаталогиВнешнихОбработок") Тогда
		КаталогиВнешнихОбработок = ОбработатьОтносительныеПути(Настройки[ИмяТеста()].КаталогиВнешнихОбработок);
	КонецЕсли;
	
	Если Настройки.Свойство(ИмяТеста()) И Настройки[ИмяТеста()].Свойство("ИсключенияИзПроверок") Тогда
		ИсключенияИзПроверок(Настройки);
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ИсключенияИзПроверок(Настройки)

	Для Каждого ИсключенияИзПроверокПоОбъектам Из Настройки[ИмяТеста()].ИсключенияИзпроверок Цикл
		Для Каждого ИсключениеИзПроверок Из ИсключенияИзПроверокПоОбъектам.Значение Цикл
			ИсключенияИзПроверок.Вставить(ВРег(ИсключенияИзПроверокПоОбъектам.Ключ + "." + ИсключениеИзПроверок), Истина); 	
		КонецЦикла;
	КонецЦикла;	

КонецПроцедуры

#КонецОбласти

#Область Тесты

&НаКлиенте
Процедура ТестДолжен_ПроверитьМакетСКДВнешнегоОтчета(ИмяОтчета, ПолноеИмяОтчета, ИмяМакета) Экспорт
	
	ПропускатьТест = ПропускатьТест(СтроковыеУтилиты.ПодставитьПараметрыВСтроку("ВнешнийОтчет.%1", ИмяОтчета));
	ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяОтчета);
	Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтотОбъект.УникальныйИдентификатор);
	
	Результат = ПроверитьМакетСКД("ВнешниеОтчеты", Адрес, ИмяМакета);
	Если Не Результат.ОтчетПодключен И ПропускатьТест.Пропустить Тогда
		Утверждения.ПропуститьТест(ПропускатьТест.ТекстСообщения);
	Иначе
		Утверждения.Проверить(Результат.ОтчетПодключен, Результат.ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьМакетСКДВнешнейОбработки(ИмяОбработки, ПолноеИмяОбработки, ИмяМакета) Экспорт
	
	ПропускатьТест = ПропускатьТест(СтроковыеУтилиты.ПодставитьПараметрыВСтроку("ВнешнийОтчет.%1", ИмяОбработки));
	ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяОбработки);
	Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтотОбъект.УникальныйИдентификатор);
	
	Результат = ПроверитьМакетСКД("ВнешниеОбработки", Адрес, ИмяМакета);
	Если Не Результат.ОтчетПодключен И ПропускатьТест.Пропустить Тогда
		Утверждения.ПропуститьТест(ПропускатьТест.ТекстСообщения);
	Иначе
		Утверждения.Проверить(Результат.ОтчетПодключен, Результат.ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьМакетСКД(ИмяМенеджера, Адрес, ИмяМакета)
	
	Менеджер = Вычислить(ИмяМенеджера);
	Результат = Новый Структура;
	Результат.Вставить("ТекстОшибки", "");
	Результат.Вставить("ОтчетПодключен", Ложь);
	
	Попытка
		ИмяФайла = ВременныйФайлОбработкиОтчета(Адрес);
		ВнешнийОбъект = Менеджер.Создать(ИмяФайла);	
		Результат.ОтчетПодключен = Истина;
		УдалитьФайлы(ИмяФайла);
	Исключение
		УдалитьФайлы(ИмяФайла);
		Результат.ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Возврат Результат;
	КонецПопытки;
	
	СхемаКомпоновкиДанных = ВнешнийОбъект.ПолучитьМакет(СокрЛП(ИмяМакета));		
	КомпоновщикНастроекКомпоновкиДанных = Новый КомпоновщикНастроекКомпоновкиДанных;
	ИсточникДоступныхНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных);
    КомпоновщикНастроекКомпоновкиДанных.Инициализировать(ИсточникДоступныхНастроек);
	
	Возврат Результат;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПропускатьТест(ИмяОтчета)

	Результат = Новый Структура;
	Результат.Вставить("ТекстСообщения", "");
	Результат.Вставить("Пропустить", Ложь);
	
	Если ИсключенияИзПроверок.Получить(ВРег(ИмяОтчета)) <> Неопределено Тогда
		ШаблонСообщения = НСтр("ru = 'Объект ""%1"" исключен из проверки.'");
		Результат.ТекстСообщения = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонСообщения, ИмяОтчета);
		Результат.Пропустить = Истина;
		Возврат Результат;
	КонецЕсли;
		
	Возврат Результат;

КонецФункции 

&НаКлиенте
Функция ТекстСообщения(ИмяОтчета, Результат)

	ШаблонСообщения = НСтр("ru = 'Для отчета ""%1"" не указаны формы:%2.'");
	ТекстСообщения = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонСообщения, ИмяОтчета, Результат);
	
	Возврат ТекстСообщения;

КонецФункции

&НаКлиенте
Функция МакетыВнешнегоОбъекта(ИмяМенеджера, Каталог, Маска)
	
	Результат = Новый Массив();
	Файлы = НайтиФайлы(Каталог, Маска, Истина);
	Если Не Файлы.Количество() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Для Каждого Файл Из Файлы Цикл 
		
		ДвоичныеДанные = Новый ДвоичныеДанные(Файл.ПолноеИмя);
		Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтотОбъект.УникальныйИдентификатор);
		
		мПараметры = Новый Структура;
		мПараметры.Вставить("Адрес", Адрес);
		мПараметры.Вставить("ИмяМенеджера", ИмяМенеджера);
		мПараметры.Вставить("ИмяФайла", Файл.Имя);
		мПараметры.Вставить("ПолноеИмя", Файл.ПолноеИмя);
		
		Макеты = МакетыВнешнегоОбъектаСервер(мПараметры);
		
		Для Каждого Макет Из Макеты Цикл
			Результат.Добавить(Макет);
		КонецЦикла;
		
	КонецЦикла;			

	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция МакетыВнешнегоОбъектаСервер(Параметры)
	
	Результат = Новый Массив();
	Менеджер = Вычислить(Параметры.ИмяМенеджера);
	
	Если Параметры.ИмяМенеджера = "ВнешниеОтчеты" Тогда
		СтруктураОсновногоМакета = Новый Структура;
		СтруктураОсновногоМакета.Вставить("ИмяМакета", "ОсновнаяСхемаКомпоновкиДанных");
		СтруктураОсновногоМакета.Вставить("ИмяФайла", Параметры.ИмяФайла);
		СтруктураОсновногоМакета.Вставить("ПолноеИмя", Параметры.ПолноеИмя);	
	КонецЕсли;
	
	Попытка
		ИмяВременногоФайла = ВременныйФайлОбработкиОтчета(Параметры.Адрес);
		МетаданныеФайла = Менеджер.Создать(ИмяВременногоФайла).Метаданные();
		УдалитьФайлы(ИмяВременногоФайла);
	Исключение
		УдалитьФайлы(ИмяВременногоФайла);
		Если Параметры.ИмяМенеджера = "ВнешниеОтчеты" Тогда
			Результат.Добавить(СтруктураОсновногоМакета);
		КонецЕсли;
		Возврат Результат;
	КонецПопытки;
	
	Для Каждого Макет Из МетаданныеФайла.Макеты Цикл
		
		Если Макет.ТипМакета <> Метаданные.СвойстваОбъектов.ТипМакета.СхемаКомпоновкиДанных Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураМакета = Новый Структура;
		СтруктураМакета.Вставить("ИмяМакета", Макет.Имя);
		СтруктураМакета.Вставить("ИмяФайла", Параметры.ИмяФайла);
		СтруктураМакета.Вставить("ПолноеИмя", Параметры.ПолноеИмя);
		Результат.Добавить(СтруктураМакета);
		
	КонецЦикла;
	
	Возврат Результат;
			
КонецФункции

&НаСервереБезКонтекста
Функция ВременныйФайлОбработкиОтчета(Адрес)
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	ДвоичныеДанные.Записать(ИмяВременногоФайла);		
	
	Возврат ИмяВременногоФайла;

КонецФункции

&НаКлиенте
Функция ОбработатьОтносительныеПути(Знач ОтносительныеПути)

	Результат = Новый Массив;
	
	Для Каждого ОтносительныйПуть Из ОтносительныеПути Цикл
		
		Если Лев(ОтносительныйПуть, 1) = "." И ЗначениеЗаполнено(КонтекстЯдра.Объект.КаталогПроекта) Тогда
			ОтносительныйПуть = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(
									"%1%2", 
									КонтекстЯдра.Объект.КаталогПроекта, 
									Сред(ОтносительныйПуть, 2));
		КонецЕсли;
		
		ОтносительныйПуть = СтрЗаменить(ОтносительныйПуть, "\\", "\");
		
		Если Результат.Найти(ОтносительныйПуть) = Неопределено Тогда
			Результат.Добавить(ОтносительныйПуть);
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат Результат;

КонецФункции 

&НаСервере
Функция ИмяТеста()
	Возврат РеквизитФормыВЗначение("Объект").Метаданные().Имя;
КонецФункции

&НаКлиенте
Функция ВыполнятьТест(КонтекстЯдра)
	
	ВыполнятьТест = Истина;
	ПутьНастройки = "Тесты";
	Настройки(КонтекстЯдра, ПутьНастройки);
	Настройки = Объект.Настройки;
	
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		Возврат ВыполнятьТест;
	КонецЕсли;
		
	Если ТипЗнч(Настройки) = Тип("Структура") 
		И Настройки.Свойство("Параметры") 
		И Настройки.Параметры.Свойство(ИмяТеста()) Тогда
		ВыполнятьТест = Настройки.Параметры[ИмяТеста()];	
	КонецЕсли;
	
	Возврат ВыполнятьТест;

КонецФункции

#КонецОбласти