#Область ОписаниеПеременных

&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем Утверждения;
&НаКлиенте
Перем СтроковыеУтилиты;
&НаКлиенте
Перем ПрефиксОбъектов;
&НаКлиенте
Перем ИмяПодсистемы;

#КонецОбласти

#Область ИнтерфейсТестирования

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	СтроковыеУтилиты = КонтекстЯдра.Плагин("СтроковыеУтилиты");
	
	ПутьНастройки = "Тесты";
	Настройки(КонтекстЯдра, ПутьНастройки);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдра) Экспорт
	
	Если Не ВыполнятьТест(КонтекстЯдра) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПрефиксОбъектов) Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИмяПодсистемы) Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектыМетаданных = ОбъектыМетаданных(ПрефиксОбъектов);
	
	Для Каждого ОбъектМетаданных Из ОбъектыМетаданных Цикл
		Если ОбъектМетаданных.Значение.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		НаборТестов.НачатьГруппу(ОбъектМетаданных.Ключ, Ложь);
		Для Каждого Элемент Из ОбъектМетаданных.Значение Цикл
			НаборТестов.Добавить(
				"ТестДолжен_ПроверитьЧтоОбъектВключенВПодсистемы", 
				НаборТестов.ПараметрыТеста(Элемент.ПолноеИмя), 
				Элемент.Имя);	
		КонецЦикла;
	КонецЦикла;
			
КонецПроцедуры

#КонецОбласти

#Область РаботаСНастройками

&НаКлиенте
Процедура Настройки(КонтекстЯдра, Знач ПутьНастройки)

	Если ЗначениеЗаполнено(Объект.Настройки) Тогда
		Возврат;
	КонецЕсли;
	
	ПлагинНастроек = КонтекстЯдра.Плагин("Настройки");		
	Объект.Настройки = ПлагинНастроек.ПолучитьНастройку(ПутьНастройки);
	Настройки = Объект.Настройки;
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		Объект.Настройки = Новый Структура(ПутьНастройки, Неопределено);
		Возврат;
	КонецЕсли;

	Если Настройки.Свойство("Параметры") И Настройки.Параметры.Свойство("Префикс") Тогда
		ПрефиксОбъектов = ВРег(Настройки.Параметры.Префикс);
	КонецЕсли;
	
	Если Настройки.Свойство("Параметры") И Настройки.Параметры.Свойство("Подсистема") Тогда
		ИмяПодсистемы = ВРег(Настройки.Параметры.Подсистема);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область Тесты

&НаКлиенте
Процедура ТестДолжен_ПроверитьЧтоОбъектВключенВПодсистемы(ПолноеИмяМетаданных) Экспорт
		
	Результат = ПроверитьЧтоОбъектВключенВПодсистемыСервер(ПолноеИмяМетаданных, ИмяПодсистемы);	
	Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных, ИмяПодсистемы));
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьЧтоОбъектВключенВПодсистемыСервер(ПолноеИмяМетаданных, ИмяПодсистемы)

	ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ПолноеИмяМетаданных);
	Подсистема = Метаданные.Подсистемы[ИмяПодсистемы];
	Результат = Ложь;
	
	Если Подсистема.Состав.Содержит(ОбъектМетаданных) Тогда
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ТекстСообщения(ПолноеИмяМетаданных, ИмяПодсистемы)

	ШаблонСообщения = НСтр("ru = 'Объект ""%1"" не входит в подсистему ""%2"".'");
	ТекстСообщения = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонСообщения, ПолноеИмяМетаданных, ИмяПодсистемы);
	
	Возврат ТекстСообщения;

КонецФункции

&НаСервереБезКонтекста
Функция ОбъектыМетаданных(ПрефиксОбъектов)
		
	ОбъектыМетаданных = Новый Структура;
	ОбъектыМетаданных.Вставить("ОбщиеМодули", Новый Массив);
	ОбъектыМетаданных.Вставить("ПараметрыСеанса", Новый Массив);
	ОбъектыМетаданных.Вставить("Роли", Новый Массив);
	ОбъектыМетаданных.Вставить("ПланыОбмена", Новый Массив);
	ОбъектыМетаданных.Вставить("КритерииОтбора", Новый Массив);
	ОбъектыМетаданных.Вставить("ПодпискиНаСобытия", Новый Массив);
	ОбъектыМетаданных.Вставить("РегламентныеЗадания", Новый Массив);
	ОбъектыМетаданных.Вставить("ФункциональныеОпции", Новый Массив);
	ОбъектыМетаданных.Вставить("ПараметрыФункциональныхОпций", Новый Массив);
	ОбъектыМетаданных.Вставить("ОпределяемыеТипы", Новый Массив);
	ОбъектыМетаданных.Вставить("ХранилищаНастроек", Новый Массив);
	ОбъектыМетаданных.Вставить("ОбщиеФормы", Новый Массив);
	ОбъектыМетаданных.Вставить("ОбщиеКоманды", Новый Массив);
	ОбъектыМетаданных.Вставить("ГруппыКоманд", Новый Массив);
	ОбъектыМетаданных.Вставить("ОбщиеМакеты", Новый Массив);
	ОбъектыМетаданных.Вставить("ОбщиеКартинки", Новый Массив);
	ОбъектыМетаданных.Вставить("ПакетыXDTO", Новый Массив);
	ОбъектыМетаданных.Вставить("WebСервисы", Новый Массив); 
	ОбъектыМетаданных.Вставить("HTTPСервисы", Новый Массив);
	ОбъектыМетаданных.Вставить("ЭлементыСтиля", Новый Массив);
	ОбъектыМетаданных.Вставить("Стили", Новый Массив);
	ОбъектыМетаданных.Вставить("Константы", Новый Массив);
	ОбъектыМетаданных.Вставить("Справочники", Новый Массив);
	ОбъектыМетаданных.Вставить("Документы", Новый Массив);
	ОбъектыМетаданных.Вставить("ЖурналыДокументов", Новый Массив);
	ОбъектыМетаданных.Вставить("Перечисления", Новый Массив);
	ОбъектыМетаданных.Вставить("Отчеты", Новый Массив);
	ОбъектыМетаданных.Вставить("Обработки", Новый Массив);
	ОбъектыМетаданных.Вставить("ПланыВидовХарактеристик", Новый Массив);
	ОбъектыМетаданных.Вставить("ПланыСчетов", Новый Массив);
	ОбъектыМетаданных.Вставить("ПланыВидовРасчета", Новый Массив);
	ОбъектыМетаданных.Вставить("РегистрыСведений", Новый Массив);
	ОбъектыМетаданных.Вставить("РегистрыНакопления", Новый Массив);
	ОбъектыМетаданных.Вставить("РегистрыБухгалтерии", Новый Массив);
	ОбъектыМетаданных.Вставить("РегистрыРасчета", Новый Массив);
	ОбъектыМетаданных.Вставить("БизнесПроцессы", Новый Массив);
	ОбъектыМетаданных.Вставить("Задачи", Новый Массив);
	ОбъектыМетаданных.Вставить("ВнешниеИсточникиДанных", Новый Массив);
	
	Для Каждого Элемент Из ОбъектыМетаданных Цикл
		Для Каждого ОбъектМетаданных Из Метаданные[Элемент.Ключ] Цикл
			Если СтрНайти(ВРег(ОбъектМетаданных.Имя), ПрефиксОбъектов) = 0 Тогда
				Продолжить;
			КонецЕсли;
			Если Метаданные.ВнешниеИсточникиДанных.Содержит(ОбъектМетаданных) Тогда
				ОбъектыВнешнегоИсточникаДанных(ОбъектМетаданных, ОбъектыМетаданных[Элемент.Ключ]);
			Иначе	
				СтруктураЭлемента = Новый Структура;
				СтруктураЭлемента.Вставить("Имя", ОбъектМетаданных.Имя);
				СтруктураЭлемента.Вставить("ПолноеИмя", ОбъектМетаданных.ПолноеИмя());
				ОбъектыМетаданных[Элемент.Ключ].Добавить(СтруктураЭлемента);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ОбъектыМетаданных;

КонецФункции

&НаСервереБезКонтекста
Процедура ОбъектыВнешнегоИсточникаДанных(ОбъектМетаданных, КоллекцияОбъектовМетаданных)

	КоллекцииВнешнегоИсчтоникаДанных = Новый Структура;
	КоллекцииВнешнегоИсчтоникаДанных.Вставить("Таблицы", "Таблица");
	КоллекцииВнешнегоИсчтоникаДанных.Вставить("Кубы", "Куб");
	
	СтроковыеУтилиты = СтроковыеУтилиты();
	
	Для Каждого КоллекцияВнешнегоИсчтоникаДанных Из КоллекцииВнешнегоИсчтоникаДанных Цикл
		Для Каждого ОбъектВнешнегоИсчтоникаДанных Из ОбъектМетаданных[КоллекцияВнешнегоИсчтоникаДанных.Ключ] Цикл
			
			Имя = СтроковыеУтилиты.ПодставитьПараметрыВСтроку("%1.%2.%3", 
					ОбъектМетаданных.Имя, 
					КоллекцияВнешнегоИсчтоникаДанных.Значение, 
					ОбъектВнешнегоИсчтоникаДанных.Имя);
					
			СтруктураЭлемента = Новый Структура;
			СтруктураЭлемента.Вставить("Имя", Имя);
			СтруктураЭлемента.Вставить("ПолноеИмя", ОбъектВнешнегоИсчтоникаДанных.ПолноеИмя());
			КоллекцияОбъектовМетаданных.Добавить(СтруктураЭлемента);
			
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Функция СтроковыеУтилиты()
	Возврат ВнешниеОбработки.Создать("СтроковыеУтилиты");	
КонецФункции 

&НаСервере
Функция ИмяТеста()
	Возврат РеквизитФормыВЗначение("Объект").Метаданные().Имя;
КонецФункции

&НаКлиенте
Функция ВыполнятьТест(КонтекстЯдра)
	
	ВыполнятьТест = Истина;
	ПутьНастройки = "Тесты";
	Настройки(КонтекстЯдра, ПутьНастройки);
	Настройки = Объект.Настройки;
	
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		Возврат ВыполнятьТест;
	КонецЕсли;
		
	Если ТипЗнч(Настройки) = Тип("Структура") 
		И Настройки.Свойство("Параметры") 
		И Настройки.Параметры.Свойство(ИмяТеста()) Тогда
		ВыполнятьТест = Настройки.Параметры[ИмяТеста()];	
	КонецЕсли;
	
	Возврат ВыполнятьТест;

КонецФункции

#КонецОбласти