#Область ОписаниеПеременных

&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем Утверждения;
&НаКлиенте
Перем СтроковыеУтилиты;
&НаКлиенте
Перем ИсключенияИзПроверок;

#КонецОбласти

#Область ИнтерфейсТестирования

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	СтроковыеУтилиты = КонтекстЯдра.Плагин("СтроковыеУтилиты");
	
	ПутьНастройки = "Тесты";
	Настройки(КонтекстЯдра, ПутьНастройки);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдра) Экспорт
	
	Если Не ВыполнятьТест(КонтекстЯдра) Тогда
		Возврат;
	КонецЕсли;
	
	ГруппыТестов = ГруппыТестов();
	
	Для Каждого ГруппаТестов Из ГруппыТестов Цикл
		
		МассивОбъектовМетаданных = МассивОбъектовМетаданных(ГруппаТестов.ИмяОбъектовМетаданных);
		НаборТестов.НачатьГруппу(ГруппаТестов.ИмяГруппыТестов, Истина);	
		
		Для Каждого ЭлементМассиваОбъектовМетаданных Из МассивОбъектовМетаданных Цикл	
			
			НаборТестов.Добавить(
				"ТестДолжен_ПроверитьПривилегированныйРежимОбъекта", 
				НаборТестов.ПараметрыТеста(ЭлементМассиваОбъектовМетаданных.ПолноеИмя, ГруппаТестов.ПроверяемыеСвойства), 
				ЭлементМассиваОбъектовМетаданных.Имя);
				
		КонецЦикла;
			
	КонецЦикла;
			
КонецПроцедуры

#КонецОбласти

#Область РаботаСНастройками

&НаКлиенте
Процедура Настройки(КонтекстЯдра, Знач ПутьНастройки)

	Если ЗначениеЗаполнено(Объект.Настройки) Тогда
		Возврат;
	КонецЕсли;
	
	ИсключенияИзПроверок = Новый Соответствие;
	ПлагинНастроек = КонтекстЯдра.Плагин("Настройки");
	Объект.Настройки = ПлагинНастроек.ПолучитьНастройку(ПутьНастройки);
	Настройки = Объект.Настройки;
	
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		Объект.Настройки = Новый Структура(ПутьНастройки, Неопределено);
		Возврат;
	КонецЕсли;
	
	Если Настройки.Свойство(ИмяТеста()) И Настройки[ИмяТеста()].Свойство("ИсключенияИзПроверок") Тогда
		ИсключенияИзПроверок(Настройки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключенияИзПроверок(Настройки)

	Для Каждого ИсключенияИзПроверокПоОбъектам Из Настройки[ИмяТеста()].ИсключенияИзПроверок Цикл
		Для Каждого ИсключениеИзПроверок Из ИсключенияИзПроверокПоОбъектам.Значение Цикл
			ИсключенияИзПроверок.Вставить(ВРег(ИсключенияИзПроверокПоОбъектам.Ключ + "." + ИсключениеИзПроверок), Истина); 	
		КонецЦикла;
	КонецЦикла;	

КонецПроцедуры

#КонецОбласти

#Область Тесты

&НаКлиенте
Процедура ТестДолжен_ПроверитьПривилегированныйРежимОбъекта(ПолноеИмяМетаданных, ПроверяемыеСвойства) Экспорт
	
	ПропускатьТест = ПропускатьТест(ПолноеИмяМетаданных);
	
	Результат = ПроверитьПривилегированныйРежимОбъекта(ПолноеИмяМетаданных, ПроверяемыеСвойства);
	Если Результат <> "" И ПропускатьТест.Пропустить Тогда
		Утверждения.ПропуститьТест(ПропускатьТест.ТекстСообщения);
	Иначе
		Утверждения.Проверить(Результат = "", ТекстСообщения(ПолноеИмяМетаданных, Результат));
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьПривилегированныйРежимОбъекта(ПолноеИмяМетаданных, ПроверяемыеСвойства)
	
	Результат = "";
	СтроковыеУтилиты = СтроковыеУтилиты();	
	ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ПолноеИмяМетаданных);
	
	Для Каждого ПроверяемоеСвойство Из ПроверяемыеСвойства Цикл
		Если ОбъектМетаданных[ПроверяемоеСвойство.Ключ] <> ПроверяемоеСвойство.Значение Тогда
			ТекстОшибки = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(
							"%1: %2", 
							ПроверяемоеСвойство.Ключ, 
							ОбъектМетаданных[ПроверяемоеСвойство.Ключ]);
			Разделитель = ?(ЗначениеЗаполнено(Результат), Символы.ПС, "");
			Результат = СтроковыеУтилиты.ПодставитьПараметрыВСтроку("%1%2%3", Результат, Разделитель, ТекстОшибки);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;

КонецФункции 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПропускатьТест(ПолноеИмяМетаданных)

	Результат = Новый Структура;
	Результат.Вставить("ТекстСообщения", "");
	Результат.Вставить("Пропустить", Ложь);
	
	Если ЭтоУстаревшийОбъектМетаданных(ПолноеИмяМетаданных) Тогда
		ШаблонСообщения = НСтр("ru = '""%1"" исключен из проверки, устаревший объект.'");
		Результат.ТекстСообщения = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонСообщения, ПолноеИмяМетаданных);
		Результат.Пропустить = Истина;
		Возврат Результат;
	КонецЕсли;
	
	Если ИсключенияИзПроверок.Получить(ВРег(ПолноеИмяМетаданных)) <> Неопределено Тогда
		ШаблонСообщения = НСтр("ru = '""%1"" исключен из проверки.'");
		Результат.ТекстСообщения = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонСообщения, ПолноеИмяМетаданных);
		Результат.Пропустить = Истина;
		Возврат Результат;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции 

&НаКлиенте
Функция ТекстСообщения(ПолноеИмяМетаданных, Результат)

	ШаблонСообщения = НСтр("ru = 'У объект метаданных ""%1"" установлены свойства: %2%3'");
	ТекстСообщения = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(
						ШаблонСообщения, 
						ПолноеИмяМетаданных, 
						Символы.ПС, 
						Результат);
	
	Возврат ТекстСообщения;

КонецФункции

&НаСервереБезКонтекста
Функция ГруппыТестов()

	ГруппыТестов = Новый Массив;
	
	ПроверяемыеСвойства = Новый Структура;
	ПроверяемыеСвойства.Вставить("ПривилегированныйРежимПриПолучении", Истина);
	
	СтруктураГруппыТестов = Новый Структура;
	СтруктураГруппыТестов.Вставить("ИмяГруппыТестов", "Функциональные опции");
	СтруктураГруппыТестов.Вставить("ИмяОбъектовМетаданных", "ФункциональныеОпции");
	СтруктураГруппыТестов.Вставить("ПроверяемыеСвойства", ПроверяемыеСвойства);
	
	ГруппыТестов.Добавить(СтруктураГруппыТестов);
	
	ПроверяемыеСвойства = Новый Структура;
	ПроверяемыеСвойства.Вставить("ПривилегированныйРежимПриПроведении", Истина);
	ПроверяемыеСвойства.Вставить("ПривилегированныйРежимПриОтменеПроведения", Истина);
	
	СтруктураГруппыТестов = Новый Структура;
	СтруктураГруппыТестов.Вставить("ИмяГруппыТестов", "Документы");
	СтруктураГруппыТестов.Вставить("ИмяОбъектовМетаданных", "Документы");
	СтруктураГруппыТестов.Вставить("ПроверяемыеСвойства", ПроверяемыеСвойства);
	
	ГруппыТестов.Добавить(СтруктураГруппыТестов);
	
	ПроверяемыеСвойства = Новый Структура;
	ПроверяемыеСвойства.Вставить("ПривилегированныйРежимПриСозданииЗадач", Истина);
	
	СтруктураГруппыТестов = Новый Структура;
	СтруктураГруппыТестов.Вставить("ИмяГруппыТестов", "Бизнес процессы");
	СтруктураГруппыТестов.Вставить("ИмяОбъектовМетаданных", "БизнесПроцессы");
	СтруктураГруппыТестов.Вставить("ПроверяемыеСвойства", ПроверяемыеСвойства);
	
	ГруппыТестов.Добавить(СтруктураГруппыТестов);
	
	Возврат ГруппыТестов;

КонецФункции

&НаСервереБезКонтекста
Функция МассивОбъектовМетаданных(ИмяОбъектовМетаданных)
	
	ПроведениеЗапретить = Метаданные.СвойстваОбъектов.Проведение.Запретить;
	МассивОбъектовМетаданных = Новый Массив;
	
	Для Каждого ОбъектМетаданных Из Метаданные[ИмяОбъектовМетаданных] Цикл
		Если Метаданные.Документы.Содержит(ОбъектМетаданных) 
			И ОбъектМетаданных.Проведение = ПроведениеЗапретить Тогда
			Продолжить;
		КонецЕсли;
		ДобавитьЭлементКоллекцииОбъектовМетаданных(
			МассивОбъектовМетаданных, 
			ОбъектМетаданных.Имя, 
			ОбъектМетаданных.ПолноеИмя());
	КонецЦикла;
	
	Возврат МассивОбъектовМетаданных;

КонецФункции

&НаСервереБезКонтекста
Процедура ДобавитьЭлементКоллекцииОбъектовМетаданных(Коллекция, Имя, ПолноеИмя)

	СтруктураЭлемента = Новый Структура;
	СтруктураЭлемента.Вставить("Имя", Имя);
	СтруктураЭлемента.Вставить("ПолноеИмя", ПолноеИмя);
	Коллекция.Добавить(СтруктураЭлемента);

КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоУстаревшийОбъектМетаданных(ИмяОбъектаМетаданных)
	Возврат СтрНайти(ВРег(ИмяОбъектаМетаданных), "УДАЛИТЬ");
КонецФункции

&НаСервереБезКонтекста
Функция СтроковыеУтилиты()
	Возврат ВнешниеОбработки.Создать("СтроковыеУтилиты");	
КонецФункции 

&НаСервере
Функция ИмяТеста()
	Возврат РеквизитФормыВЗначение("Объект").Метаданные().Имя;
КонецФункции

&НаКлиенте
Функция ВыполнятьТест(КонтекстЯдра)
	
	ВыполнятьТест = Истина;
	ПутьНастройки = "Тесты";
	Настройки(КонтекстЯдра, ПутьНастройки);
	Настройки = Объект.Настройки;
	
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		Возврат ВыполнятьТест;
	КонецЕсли;
		
	Если ТипЗнч(Настройки) = Тип("Структура") 
		И Настройки.Свойство("Параметры") 
		И Настройки.Параметры.Свойство(ИмяТеста()) Тогда
		ВыполнятьТест = Настройки.Параметры[ИмяТеста()];	
	КонецЕсли;
	
	Возврат ВыполнятьТест;

КонецФункции

#КонецОбласти