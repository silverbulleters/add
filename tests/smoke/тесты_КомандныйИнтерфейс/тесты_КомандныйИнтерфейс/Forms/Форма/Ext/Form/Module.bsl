
&НаКлиенте
Перем КонтекстЯдра;

&НаКлиенте
Перем Утверждения;

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	ТестКлиент = Неопределено;
	
	Попытка
		ТестКлиент = КонтекстЯдра.Плагин("ТестКлиенты").ТестКлиентПоУмолчанию();
	Исключение
		ИнфоОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Сообщить(ИнфоОшибки);
		Возврат;
	КонецПопытки;
	
	Если ТестКлиент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОсновноеОкно = КонтекстЯдра.Плагин("ТестКлиенты").ОсновноеОкно(ТестКлиент);
	
	Для Каждого КлючЗначение Из ОписаниеДобавляемыхТестов(ТестКлиент, ОсновноеОкно) Цикл
		Описание = КлючЗначение.Значение;
		НаборТестов.Добавить(
		Описание.ИмяТеста,
		НаборТестов.ПараметрыТеста(Описание.НавигационнаяСсылка),
		Описание.ПредставлениеТеста);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗапускомТеста() Экспорт
	
	ТестКлиент = КонтекстЯдра.Плагин("ТестКлиенты").ТестКлиентПоУмолчанию();
	КонтекстЯдра.Плагин("ТестКлиенты").ЗакрытьВсеОткрытыеОкна(ТестКлиент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапускаТеста() Экспорт
	
	//ТестКлиент = КонтекстЯдра.Плагин("ТестКлиенты").ТестКлиентПоУмолчанию();
	//КонтекстЯдра.Плагин("ТестКлиенты").ЗакрытьВсеОткрытыеОкна(ТестКлиент);
	
КонецПроцедуры

&НаКлиенте
Функция ОписаниеДобавляемыхТестов(ТестКлиент, ОсновноеОкно)
	
	РезКоллекцияОписаний = Новый Соответствие;
	
	Попытка
		КомандныйИнтерфейс = ОсновноеОкно.ПолучитьКомандныйИнтерфейс();
	Исключение
		ВызватьИсключение "Не удалось получить командный интерфейс.
		|Возможно, сеанс тест-клиента заблокирован модальным окном";
	КонецПопытки;
	ПанельРазделов = КомандныйИнтерфейс.НайтиОбъект(Тип("ТестируемаяГруппаКомандногоИнтерфейса"), НСтр("ru = 'Панель разделов'"));
	Если ТипЗнч(ПанельРазделов) = Тип("ТестируемаяГруппаКомандногоИнтерфейса") Тогда
		Для Каждого ТекКнопкаРаздел Из ПанельРазделов.НайтиОбъекты(Тип("ТестируемаяКнопкаКомандногоИнтерфейса")) Цикл
			ТекКнопкаРаздел.Нажать();
			ДобавитьОписаниеТеста(РезКоллекцияОписаний, КомандныйИнтерфейс, ТекКнопкаРаздел.ТекстЗаголовка);
			ТекКнопкаРаздел.Нажать();
		КонецЦикла;
	КонецЕсли;
	
	Возврат РезКоллекцияОписаний;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьОписаниеТеста(КоллекцияОписанийТестов, КомандныйИнтерфейс, ТекстЗаголовка)
	
	Для Каждого ТекРаздел Из КомандныйИнтерфейс.НайтиОбъекты(Тип("ТестируемаяГруппаКомандногоИнтерфейса")) Цикл
		
		Если ЭтоСлужебныйРаздел(ТекРаздел) Тогда 
			Продолжить;
		КонецЕсли;
		
		Для Каждого ТекКнопка Из ТекРаздел.ПолучитьПодчиненныеОбъекты() Цикл
			Если ЭтоСлужебныйРазделВерсия82(ТекКнопка) Тогда 
				Продолжить;
			КонецЕсли;
			ДобавляемоеОписание = Новый Структура;
			ДобавляемоеОписание.Вставить("ПредставлениеТеста", КонтекстЯдра.СтрШаблон_("%1_%2_%3", ТекстЗаголовка, ТекРаздел.ТекстЗаголовка, ТекКнопка.ТекстЗаголовка));
			ДобавляемоеОписание.Вставить("НавигационнаяСсылка", ТекКнопка.НавигационнаяСсылка);
			ДобавляемоеОписание.Вставить("ИмяТеста", ИмяТеста(ТекКнопка.НавигационнаяСсылка));
			КоллекцияОписанийТестов.Вставить(ТекКнопка.НавигационнаяСсылка, ДобавляемоеОписание);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ИмяТеста(ПараметрНавигационнаяСсылка)
	
	ПропускаемыеНавигационныеСсылки = Новый Массив;
	ПропускаемыеНавигационныеСсылки.Добавить("e1cib/command/ОбщаяКоманда.СтраницаМобильноеПриложениеНаAppStore");
	ПропускаемыеНавигационныеСсылки.Добавить("e1cib/command/ОбщаяКоманда.СтраницаМобильноеПриложениеНаGooglePlay");
	ПропускаемыеНавигационныеСсылки.Добавить("e1cib/command/ОбщаяКоманда.СтраницаПродуктаНаСайте1С");
	ПропускаемыеНавигационныеСсылки.Добавить("e1cib/command/ОбщаяКоманда.СтраницаЧтоНовогоВВерсииВидео");
	ПропускаемыеНавигационныеСсылки.Добавить("e1cib/command/Обработка.Ценообразование.Команда.Ценообразование");
	ПропускаемыеНавигационныеСсылки.Добавить("e1cib/command/ОбщаяКоманда.Налоги_РегламентированнаяОтчетность");
	
	Если ПропускаемыеНавигационныеСсылки.Найти(ПараметрНавигационнаяСсылка) = Неопределено Тогда
		Возврат "ТестДолжен_ПерейтиПоКнопкеКомандногоИнтерфейса";
	Иначе
		Возврат "ТестДолжен_ПропуститьВыполнение";
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ЭтоСлужебныйРаздел(ГруппаКомандногоИнтерфейса)
	
	ЗаголовкиСлужебныхРазделов = Новый Соответствие;
	
	// Такси
	ЗаголовкиСлужебныхРазделов.Вставить(НРег(НСтр("ru = 'Панель разделов'"))                , Истина);
	ЗаголовкиСлужебныхРазделов.Вставить(НРег(НСтр("ru = 'Панель инструментов'"))            , Истина);
	ЗаголовкиСлужебныхРазделов.Вставить(НРег(НСтр("ru = 'Панель открытых'"))                , Истина);
	ЗаголовкиСлужебныхРазделов.Вставить(НРег(НСтр("ru = 'Меню функций'"))                   , Истина);
	ЗаголовкиСлужебныхРазделов.Вставить(НРег(НСтр("ru = 'Панель функций текущего раздела'")), Истина);
	
	Возврат ЗаголовкиСлужебныхРазделов.Получить(НРег(ГруппаКомандногоИнтерфейса.ТекстЗаголовка)) = Истина;
	
КонецФункции

&НаКлиенте
Функция ЭтоСлужебныйРазделВерсия82(ГруппаКомандногоИнтерфейса)
	
	ЗаголовкиСлужебныхРазделов = Новый Соответствие;
	
	// Версия 8.2
	ЗаголовкиСлужебныхРазделов.Вставить(НРег(НСтр("ru = 'Отчеты'"))         , Истина);
	ЗаголовкиСлужебныхРазделов.Вставить(НРег(НСтр("ru = 'Сервис'"))         , Истина);
	ЗаголовкиСлужебныхРазделов.Вставить(НРег(НСтр("ru = 'Панель действий'")), Истина);
	
	Возврат ЗаголовкиСлужебныхРазделов.Получить(НРег(ГруппаКомандногоИнтерфейса.ТекстЗаголовка)) = Истина;
	
КонецФункции

&НаКлиенте
Процедура ТестДолжен_ПропуститьВыполнение(ПараметрНавигационнаяСсылка) Экспорт
	
	КонтекстЯдра.ПропуститьТест();
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПерейтиПоКнопкеКомандногоИнтерфейса(ПараметрНавигационнаяСсылка) Экспорт
	
	ТестКлиент = КонтекстЯдра.Плагин("ТестКлиенты").ТестКлиентПоУмолчанию();
	ОсновноеОкно = КонтекстЯдра.Плагин("ТестКлиенты").ОсновноеОкно(ТестКлиент);
	Попытка
		ОсновноеОкно.ВыполнитьКоманду(ПараметрНавигационнаяСсылка);
	Исключение
		ВызватьИсключение КонтекстЯдра.СтрШаблон_("Не удалось выполнить команду %1 на тест-клиенте.
		|Возможно, сеанс тест-клиента заблокирован модальным окном", ПараметрНавигационнаяСсылка);
	КонецПопытки;
	
	КонтекстЯдра.Плагин("ТестКлиенты").ИдентифицироватьОкноПредупреждение(ТестКлиент, ПереходПоКнопкеКомандногоИнтерфейса(), Ложь);
	
	ОписанияШаговСценария = Новый Массив;
	ОписанияШаговСценария.Добавить(КликПоПервойСтрокеТаблицыФормы());
	ОписанияШаговСценария.Добавить(КликПоПоследнейСтрокеТаблицыФормы());
	
	ОкноСТаблицейФормы = ТестКлиент.ПолучитьАктивноеОкно();
	
	Для Каждого ШагСценария Из ОписанияШаговСценария Цикл
		Обработали = ВыполнитьШагПроверкиТаблицыФормы(ОкноСТаблицейФормы, ШагСценария, ТестКлиент);
		Если Обработали Тогда
			КонтекстЯдра.Плагин("ТестКлиенты").ИдентифицироватьОкноПредупреждение(ТестКлиент, ШагСценария, Ложь);
		КонецЕсли;
	КонецЦикла;
	
	КонтекстЯдра.Плагин("ТестКлиенты").ЗакрытьВсеОткрытыеОкна(ТестКлиент);
	
	ОткрытыеОкна = ТестКлиент.НайтиОбъекты(Тип("ТестируемоеОкноКлиентскогоПриложения"));
	Для Каждого ТекОкно Из ОткрытыеОкна Цикл
		Если ТекОкно.Основное Или ТекОкно.НачальнаяСтраница Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТекОкно <> Неопределено Тогда
			ТекстИсключения = КонтекстЯдра.СтрШаблон_("Выявлено окно, которое не закрывается!
			|Возможно, это модальное окно.
			|Заголовок окна <%1>", ТекОкно.Заголовок);
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ВыполнитьШагПроверкиТаблицыФормы(ОкноСТаблицейФормы, ШагСценария, ТестКлиент)
	
	ТаблицаФормы = ОкноСТаблицейФормы.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"));
	Если ТаблицаФормы = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ТаблицаФормы.ТекущаяДоступность() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ТаблицаФормы.ТекущаяВидимость() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПерейтиКЗаданнойСтрокеТаблицыФормы(ШагСценария, ТаблицаФормы, ТестКлиент);
	
	Если Не ЗначениеЗаполнено(ТаблицаФормы.ПолучитьВыделенныеСтроки()) Тогда
		Возврат Истина;
	КонецЕсли;
	
	ТаблицаФормы.Выбрать();
	
	КонтекстЯдра.Плагин("ТестКлиенты").ИдентифицироватьОкноПредупреждение(ТестКлиент, ШагСценария, Ложь);
	
	ТекущееОкно = ТестКлиент.ПолучитьАктивноеОкно();
	Если ПриКликеВТаблицеФормыНовоеОкноНеОткрылось(ТекущееОкно, ОкноСТаблицейФормы) Тогда
		Если ТаблицаФормы.ТекущийРежимРедактирование() Тогда
			ТаблицаФормы.ЗакончитьРедактированиеСтроки();
		КонецЕсли;
		Возврат Истина;
	КонецЕсли;
	
	НажатьКнопкуЗаписать(ШагСценария, ТекущееОкно, ТестКлиент);
	
	Если ШагСценария = КликПоПервойСтрокеТаблицыФормы() Тогда
		ПроверитьКомандныйИнтерфейсОкна(ТекущееОкно, ТестКлиент);
	КонецЕсли;
	
	ТекущееОкно.Закрыть();
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ПерейтиКЗаданнойСтрокеТаблицыФормы(ШагСценария, ТаблицаФормы, ТестКлиент)
	
	Если ШагСценария = КликПоПервойСтрокеТаблицыФормы() Тогда
		
		ТаблицаФормы.ПерейтиКПервойСтроке();
		
	ИначеЕсли ШагСценария = КликПоПоследнейСтрокеТаблицыФормы() Тогда
		
		ТаблицаФормы.ПерейтиКПоследнейСтроке();
		
	Иначе
		
		ВызватьИсключение КонтекстЯдра.СтрШаблон_("Поведение для шага ""%1"" не определено", ШагСценария);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПриКликеВТаблицеФормыНовоеОкноНеОткрылось(ТекущееОкно, ОкноСТаблицейФормы)
	
	Возврат ТекущееОкно = ОкноСТаблицейФормы;
	
КонецФункции

&НаКлиенте
Процедура НажатьКнопкуЗаписать(ШагСценария, ТекущееОкно, ТестКлиент)
	
	КнопкаЗаписать = ТекущееОкно.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Записать");
	Если КнопкаЗаписать = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не КнопкаЗаписать.ТекущаяВидимость() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не КнопкаЗаписать.ТекущаяДоступность() Тогда
		Возврат;
	КонецЕсли;
	
	// Платформа не позволяет заранее определить доступность кнопки.
	// Поэтому нажимаем в попытке, а затем ловим исключение, если нажать кнопку не удалось.
	Попытка
		КнопкаЗаписать.Нажать();
	Исключение
		ТекстИсключения = ОписаниеОшибки();
		Если СтрНайти(ТекстИсключения, "Неподходящий тип элемента управления для вызванного действия") = 0 Тогда
			КонтекстЯдра.ВызватьОшибкуПроверки(ТекстИсключения);
		КонецЕсли;
	КонецПопытки;
	
	КонтекстЯдра.Плагин("ТестКлиенты").ИдентифицироватьОкноПредупреждение(
	ТестКлиент,
	КонтекстЯдра.СтрШаблон_("%1: Кнопка ""Записать""", ШагСценария),
	Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьКомандныйИнтерфейсОкна(ТекущееОкно, ТестКлиент)
	
	КомандныйИнтерфейс = ТекущееОкно.ПолучитьКомандныйИнтерфейс();
	Для Каждого ТекКнопка Из КомандныйИнтерфейс.НайтиОбъекты(Тип("ТестируемаяКнопкаКомандногоИнтерфейса")) Цикл
		
		ТекКнопка.Нажать();
		
		КонтекстЯдра.Плагин("ТестКлиенты").ИдентифицироватьОкноПредупреждение(
		ТестКлиент,
		КонтекстЯдра.СтрШаблон_("Командный интерфейс формы: ""%1""", ТекКнопка.ТекстЗаголовка),
		Ложь);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПереходПоКнопкеКомандногоИнтерфейса()
	
	Возврат "Переход по кнопке командного интерфейса";
	
КонецФункции

&НаКлиенте
Функция КликПоПервойСтрокеТаблицыФормы()
	
	Возврат "Клик по первой строке таблицы формы";
	
КонецФункции

&НаКлиенте
Функция КликПоПоследнейСтрокеТаблицыФормы()
	
	Возврат "Клик по последней строке таблицы формы";
	
КонецФункции
