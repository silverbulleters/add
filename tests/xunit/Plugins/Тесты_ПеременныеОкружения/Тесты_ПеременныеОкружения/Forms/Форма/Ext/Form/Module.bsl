&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем Ожидаем;
&НаКлиенте
Перем Утверждения;
&НаКлиенте
Перем ПеременныеОкружения;

// { интерфейс тестирования

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра		= КонтекстЯдраПараметр;
	Утверждения			= КонтекстЯдра.Плагин("БазовыеУтверждения");
	Ожидаем				= КонтекстЯдра.Плагин("УтвержденияBDD");
	ПеременныеОкружения	= КонтекстЯдра.Плагин("ПеременныеОкружения");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	
	НаборТестов.НачатьГруппу("Функции чтения переменных", Ложь);
	
	НаборТестов.Добавить("ТестДолжен_ПрочитатьВсеПеременные", , "Проверка работы ВсеПеременныеОкружения");
	НаборТестов.Добавить("ТестДолжен_ПрочитатьОднуПеременную", , "Проверка работы ЗначениеПеременнойОкружения");
	НаборТестов.Добавить("ТестДолжен_ПрочитатьНесуществующуюПеременную", , "Проверка работы ЗначениеПеременнойОкружения (Значение по умолчанию)");
	
	НаборТестов.НачатьГруппу("Функции установки значений", Ложь);
	
КонецПроцедуры

// } интерфейс тестирования


// { блок юнит-тестов - сами тесты

&НаКлиенте
Процедура ТестДолжен_ПрочитатьВсеПеременные() Экспорт
	
	Результат = ПеременныеОкружения.ВсеПеременныеОкружения();
	Ожидаем.Что(Результат, "Некорректно считались переменные окружения")
				.ИмеетТип("Соответствие")
				.Заполнено();
	
КонецПроцедуры
			
&НаКлиенте
Процедура ТестДолжен_ПрочитатьОднуПеременную() Экспорт
	
	Результат = ПеременныеОкружения.ЗначениеПеременнойОкружения("PATH");
	Ожидаем.Что(Результат, "Некорректно считалась переменная PATH")
				.Заполнено();
	
КонецПроцедуры

// } блок юнит-тестов - сами тесты
